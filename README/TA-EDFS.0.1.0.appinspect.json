{"summary": {"skipped": 0, "success": 99, "not_applicable": 84, "failure": 0, "warning": 0, "error": 0, "manual_check": 25}, "reports": [{"metrics": {"execution_time": 2.025492, "start_time": "2019-02-09T15:49:14.291145", "end_time": "2019-02-09T15:49:16.316637"}, "run_parameters": {"excluded_tags": [], "appinspect_version": "1.6.1", "included_tags": ["splunk_appinspect"]}, "app_name": "Embedded Dashboards for Splunk", "groups": [{"checks": [{"result": "success", "messages": [], "description": "Check that the extracted Splunk App contains a default/app.conf\n file.", "name": "check_that_extracted_splunk_app_contains_default_app_conf_file"}, {"result": "success", "messages": [], "description": "Check that the extracted Splunk App contains a default/app.conf file\n that contains an [id] or [launcher] stanza with a version property that\n is formatted as Major.Minor.Revision.", "name": "check_that_extracted_splunk_app_contains_default_app_conf_file_with_valid_version_number"}, {"result": "success", "messages": [], "description": "Check that the extracted Splunk App does not contain any files\n with incorrect permissions. Files must have the owner's\n permissions include read and write (600).", "name": "check_that_extracted_splunk_app_does_not_contain_files_with_invalid_permissions"}, {"result": "success", "messages": [], "description": "Check that the extracted Splunk App does not contain any directories\n with incorrect permissions. Directories and sub directories\n must have the owner's permissions set to r/w/x (700).", "name": "check_that_extracted_splunk_app_does_not_contain_invalid_directories"}, {"result": "success", "messages": [], "description": "Check that the extracted Splunk App does not contain any directories or\n files that start with a ., or directories that start with __MACOSX.", "name": "check_that_extracted_splunk_app_does_not_contain_prohibited_directories_or_files"}, {"result": "success", "messages": [], "description": "Check that the Splunk App package does not contain any non-app files.\n Files within a valid app folder or valid dependencies within a .dependencies\n folder are permitted, all other files are not.", "name": "check_that_splunk_app_package_does_not_contain_files_outside_of_app"}, {"result": "success", "messages": [], "description": "Check that the compressed artifact extracts to a directory that does not\n start with a . character.", "name": "check_that_splunk_app_package_extracts_to_visible_directory"}, {"result": "success", "messages": [], "description": "Check that the Splunk app provided does not contain incorrect permissions.\n Packages must have have the owner's read permission set to r (400).", "name": "check_that_splunk_app_package_has_read_permission"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_packaging_standards.py", "result": "not_applicable", "message_line": null, "line": 190, "message": "No {} folder found. Please check that the Splunk App", "message_filename": null}], "description": "Check that the Splunk App package contains only valid dependencies.\n Dependencies are valid if a .dependencies directory contains only valid\n app packages inside.", "name": "check_that_splunk_app_package_has_valid_static_dependencies"}, {"result": "success", "messages": [], "description": "Check that the Splunk app provided does not start with a .\n character.", "name": "check_that_splunk_app_package_name_does_not_start_with_period"}, {"result": "success", "messages": [], "description": "Check that the Splunk app provided a valid compressed file.", "name": "check_that_splunk_app_package_valid_compressed_file"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_packaging_standards.py", "result": "not_applicable", "message_line": null, "line": 164, "message": "No {} folder found. Please add a .dependencies directory", "message_filename": null}], "description": "Check that the Splunk App package with a .dependencies directory also\n contains an app folder with an app.manifest.", "name": "check_that_splunk_app_package_with_static_dependencies_has_app_manifest"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_packaging_standards.py", "result": "not_applicable", "message_line": null, "line": 129, "message": "No {} folder found. Please add a .dependencies directory", "message_filename": null}], "description": "Check that the Splunk App package with a .dependencies directory also\n contains exactly one valid app folder.", "name": "check_that_splunk_app_package_with_static_dependencies_has_exactly_one_app_folder"}], "name": "check_packaging_standards", "description": "Splunk app packaging standards\nThese checks validate that a Splunk app has been correctly packaged, and can be provided safely for package validation."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_authentication_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 48, "message": "authentication.conf does not exist.", "message_filename": null}], "description": "Check that stanzas in authentication.conf do not use the the\n bindDNpassword property.", "name": "check_authentication_conf_does_not_have_bindDNPassword_property"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_authentication_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 67, "message": "authentication.conf does not exist.", "message_filename": null}], "description": "Check that saml-* stanzas in authentication.conf do not turn off signedAssertion property", "name": "check_saml_auth_should_not_turn_off_signed_assertion"}], "name": "check_authentication_configuration_file", "description": "Authentication.conf file standards\nEnsure that bindDNpassword is not specified. For more, see authentication.conf."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_authorize_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 41, "message": "No `default/authorize.conf`file exists.", "message_filename": null}], "description": "Check that authorize.conf does not contain any modified capabilities.", "name": "check_authorize_conf_capability_not_modified"}], "name": "check_authorize_configuration_file", "description": "Authorize.conf file standards\nEnsure that the authorize configuration file located in the /default folder is well formed and valid. For more, see authorize.conf."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 369, "message": "authorize.conf does not exist.", "message_filename": null}], "description": "Check that authorize.conf does not grant excessive administrative\n permissions to the user.", "name": "check_authorize_conf_admin_all_objects_privileges"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/crawl.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain crawl.conf as it was deprecated in Splunk\n 6.0 and as it allows Splunk to introspect the filesystem which is not\n permitted in Splunk Cloud.", "name": "check_crawl_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/deployment.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain deployment.conf. Apps should leave\n deployment configuration up to Splunk administrators.\nAlso, deployment.conf has been removed and replaced by:\n 1) deploymentclient.conf - for configuring Deployment Clients\n 2) serverclass.conf - for Deployment Server server class configuration.", "name": "check_deployment_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/deploymentclient.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain deploymentclient.conf as it configures\n the deployment server client. Apps should leave deployment configuration up\n to Splunk administrators.", "name": "check_deploymentclient_conf_black_list"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output, directory)", "filename": "check_cloud_simple_app.py", "result": "manual_check", "message_line": null, "line": 1938, "message": "Please check the bin/ directory for app auto-update features, which is prohibited. File: bin/", "message_filename": "bin/"}], "description": "Check that the app does not implement auto-update features.", "name": "check_for_auto_update_features"}, {"result": "success", "messages": [], "description": "Check that all executable binary files have matching source code.", "name": "check_for_binary_files_without_source_code"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "manual_check", "message_line": null, "line": 1749, "message": "Please check whether the app is sending data to third- party services, which is not recommended.", "message_filename": null}], "description": "Check that the app exports data to 3rd party services. Splunk Cloud\n Application Security policy defines \"Exporting Splunk Data to 3rd party\n service\" as a moderate security risk and may or may not be permitted based\n on cumulative risk score.", "name": "check_for_communication_with_third_party_services"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "manual_check", "message_line": null, "line": 1964, "message": "Please check for known vulnerabilities in third-party libraries. Use these links: https://web.nvd.nist.gov/view/vuln/search. and https://nvd.nist.gov/cvss.cfm", "message_filename": null}], "description": "Check third party libraries for known vulnerabilities. Splunk Cloud\n Application Security policy defines \"Included application libraries have\n multiple vulnerabilities not covered by the components in Transit\" as a\n moderate security risk and may or may not be permitted based on\n cumulative risk score.", "name": "check_for_known_vulnerabilities_in_third_party_libraries"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"The lookups/ directory does not exist.\")", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1710, "message": "The lookups/ directory does not exist.", "message_filename": null}], "description": "Check for pre-filled lookup tables. Splunk\n Cloud Application Security policy defines \"Lookup Table with Customer\n Supplied Data\" as a minor risk and may or may not be permitted based on\n cumulative risk score.", "name": "check_for_lookup_tables_prefilled_with_customer_data"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "manual_check", "message_line": null, "line": 1689, "message": "Please check for monitoring of Splunk Cloud infrastructure.", "message_filename": null}], "description": "Check that the app does not monitor Splunk Cloud infrastructure.", "name": "check_for_monitoring_of_splunk_cloud_infrastructure"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "manual_check", "message_line": null, "line": 1763, "message": "Please check for required access to private infrastructure.", "message_filename": null}], "description": "Check that the app requires access to private infrastructure. Splunk\n Cloud Application Security policy defines \"Network access required to\n customer service and or infrastructure\" as a minor risk and may or may\n not be permitted based on cumulative risk score.", "name": "check_for_required_access_to_private_infrastructure"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "manual_check", "message_line": null, "line": 1919, "message": "Please check for reverse shells.", "message_filename": null}], "description": "Check that the app does not contain reverse shells.", "name": "check_for_reverse_shells"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "manual_check", "message_line": null, "line": 1734, "message": "Please check for inbound or outbound UDP network communications.Any programmatic UDP network communication is prohibited due to security risks in Splunk Cloud and App Certification.The use or instruction to configure an app using Settings -> Data Inputs -> UDP within Splunk is permitted. (Note: UDP configuration options are not available in Splunk Cloud and as such do not impose a security risk.", "message_filename": null}], "description": "Check for UDP network communication.", "name": "check_for_udp_network_communications"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "manual_check", "message_line": null, "line": 1721, "message": "Please check for inbound or outbound unencrypted network communications.All communications with Splunk Cloud must be encrypted.", "message_filename": null}], "description": "Check that all network communications are encrypted.", "name": "check_for_unencrypted_network_communications"}, {"result": "success", "messages": [], "description": "Check that inputs.conf does not have any UDP inputs.", "name": "check_inputs_conf_for_udp"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/instance.cfg.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain instance.cfg.conf. Apps should not\n configure server/instance specific settings.", "name": "check_instance_cfg_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/literals.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain literals.conf. Apps should not\n alter/override text strings displayed in Splunk Web.", "name": "check_literals_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/messages.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain messages.conf. Apps should not\n alter/override messages/externalized strings.", "name": "check_messages_conf_black_list"}, {"result": "success", "messages": [], "description": "Check that the metadata/ directory only contains .meta files.", "name": "check_metadata_white_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/pubsub.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain pubsub.conf as it defines a custom\n client for the deployment server. Apps should leave deployment\n configuration up to Splunk administrators.", "name": "check_pubsub_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/segmenters.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain segmenters.conf. A misconfigured\n segmenters.conf can result in unsearchable data that could only be\n addressed by re-indexing and segmenters.conf configuration is system-wide.", "name": "check_segmenters_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/serverclass.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain serverclass.conf as it defines\n deployment server classes for use with deployment server. Apps should\n leave deployment configuration up to Splunk administrators.", "name": "check_serverclass_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/serverclass.seed.xml.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain serverclass.seed.xml.conf as it\n configures deploymentClient to seed a Splunk installation with applications\n at startup time. Apps should leave deployment configuration up to Splunk\n administrators.", "name": "check_serverclass_seed_xml_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/source-classifier.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain source-classifier.conf.conf as it\n configures system-wide settings for ignoring terms (such as sensitive\n data).", "name": "check_source_classifier_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/sourcetypes.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain sourcetypes.conf as it is a\n machine-generated file that stores source type learning rules. props.conf\n should be used to define sourcetypes.", "name": "check_sourcetypes_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/splunk-launch.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain splunk-launch.conf as it defines\n environment values used at startup time. System-wide environment variables\n should be left up to Splunk administrators.", "name": "check_splunk_launch_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/telemetry.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain telemetry.conf as it controls a\n Splunk-internal feature that should not be configured by apps.", "name": "check_telemetry_conf_black_list"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1520, "message": "No props.conf file exists.", "message_filename": null}], "description": "Check that the app does not contain configurations of default source type in props.conf, \n which will overwrite the configurations of default source types in system/default/props.conf \n then it will affect other apps in splunk enterprise/cloud.", "name": "check_that_no_configurations_of_default_source_type_in_props_conf"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1373, "message": "passwords.conf does not exist.", "message_filename": null}], "description": "Check that the app does not have default/passwords.conf, otherwise, warn it.", "name": "check_that_passwords_conf_not_exist"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_cloud_simple_app.py", "result": "not_applicable", "message_line": null, "line": 1179, "message": "`default/user-seed.conf` does not exist.", "message_filename": null}], "description": "Check that app does not contain user-seed.conf as it is used to\n preconfigure default login and password information.", "name": "check_user_seed_conf_black_list"}], "name": "check_cloud_simple_app", "description": "Cloud operations simple application check\nThis group serves to help validate simple applications in an effort to try and automate the validation process for cloud operations."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 613, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "check the property defined in spec file of README/savedsearches.conf.spec\n if the property is defined in spec file and does not provide a default value in\n default/savedsearches.conf, this check should fail.", "name": "check_for_default_values_for_modviz"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 357, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check appserver/static/visualizations/<viz_name>/formatter.html for bad nodes that\n are removed by Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered.", "name": "check_for_formatter_html_bad_nodes"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 304, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check appserver/static/visualizations/<viz_name>/formatter.html for comments that\n are removed by Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered.", "name": "check_for_formatter_html_comments"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 499, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check appserver/static/visualizations/<viz_name>/formatter.html for css expressions from all  tags\n that are replaced by Splunk's <code>.../search_mrsparkle/exposed/js/util/htmlcleaner.js</code> when rendered.</p>", "name": "check_for_formatter_html_css_expressions"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 431, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check appserver/static/visualizations/<viz_name>/formatter.html for inappropriate attributes that\n are removed by Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered.", "name": "check_for_formatter_html_inappropriate_attributes"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 551, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check appserver/static/visualizations/<viz_name>/formatter.html for inline style attributes\n from all  tags that are removed by Splunk's <code>.../search_mrsparkle/exposed/js/util/htmlcleaner.js</code>\n when rendered.</p>", "name": "check_for_formatter_html_inline_style_attributes"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 214, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check that each custom visualization stanza in\n default/visualizations.conf has a matching directory in the\n appserver/static/visualizations/ directory.", "name": "check_for_matching_stanza_visualization_directory"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 255, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check that each custom visualization stanza in\n default/visualizations.conf has some required source files in the\n appserver/static/visualizations/<visualization_name>/ directory.", "name": "check_for_required_files_for_visualization"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 130, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check that custom visualizations have an\n appserver/static/visualizations/ directory.", "name": "check_for_visualizations_directory"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 49, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check the required file appserver/static/visualizations/<viz_name>/preview.png\n exists for the visualization", "name": "check_for_visualizations_preview_png"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_custom_visualizations.py", "result": "not_applicable", "message_line": null, "line": 178, "message": "visualizations.conf does not exist.", "message_filename": null}], "description": "Check that each stanza in default/vizualizations.conf has a matching\n stanza in metadata/default.meta`.", "name": "check_that_visualizations_conf_has_matching_default_meta_stanza"}], "name": "check_custom_visualizations", "description": "Custom visualizations support checks\nCustom visualizations are defined in /default/visualizations.conf file. For more, see Custom visualization API reference."}, {"checks": [{"result": "success", "messages": [], "description": "Check that default/limits.conf has not been included.", "name": "check_limits_conf"}], "name": "check_limits_configuration_file", "description": "Limits.conf file standards\nEnsure that /default/limits.conf file is omitted.\nWhen included in the app, the limits.conf file changes the limits that are placed on the system for hardware use and memory consumption, which is a task that should be handled by Splunk administrators and not by Splunk app developers. For more, see limits.conf."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_splunk_6_0_deprecated_features.py", "result": "not_applicable", "message_line": null, "line": 26, "message": "viewstates.conf does not exist.", "message_filename": null}], "description": "Check that default/viewstates.conf does not exist in the app.\n (http://docs.splunk.com/Documentation/Splunk/6.0/AdvancedDev/Migration#Viewstates_are_no_longer_supported_in_simple_XML)", "name": "check_for_viewstates_conf"}], "name": "check_splunk_6_0_deprecated_features", "description": "Deprecated features from Splunk Enterprise 6.0\nThe following features should not be supported in Splunk 6.0 or later."}, {"checks": [{"result": "success", "messages": [], "description": "Check for Module System appserver/modules directory. The Module system was\n deprecated in Splunk 6.3 as part of the advanced XML deprecation. See:\n http://docs.splunk.com/Documentation/Splunk/latest/Module", "name": "check_for_advanced_xml_appserver_modules_directory"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_splunk_6_3_deprecated_features.py", "result": "not_applicable", "message_line": null, "line": 169, "message": "No xml files found.", "message_filename": null}], "description": "Check for Advanced XML <module> elements. The Module system was\n deprecated in Splunk 6.3 as part of the advanced XML deprecation. See:\n http://docs.splunk.com/Documentation/Splunk/latest/Module", "name": "check_for_advanced_xml_module_elements"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_splunk_6_3_deprecated_features.py", "result": "not_applicable", "message_line": null, "line": 252, "message": "No xml files found.", "message_filename": null}], "description": "Check for Advanced XML <view> elements that do not have the\n redirect or html types.", "name": "check_for_advanced_xml_view_element"}, {"result": "success", "messages": [], "description": "Check for Module System web.conf endpoints. The Module system was\n deprecated in Splunk 6.3 as part of the advanced XML deprecation. See:\n http://docs.splunk.com/Documentation/Splunk/latest/Module", "name": "check_for_advanced_xml_web_conf_endpoints"}, {"result": "success", "messages": [], "description": "Check for use of Django bindings.", "name": "check_for_django_bindings"}, {"result": "success", "messages": [], "description": "Check for Simple XML <chart> panels with deprecated options\n charting.axisLabelsY.majorTickSize or\n charting.axisLabelsY.majorLabelVisibility.", "name": "check_for_simple_xml_chart_element_with_deprecated_option_names"}, {"result": "success", "messages": [], "description": "Check for the deprecated <option name='previewResults'> in Simple XML\n files.", "name": "check_for_simple_xml_option_element_with_name_previewResults"}, {"result": "success", "messages": [], "description": "Check for the deprecated <searchTemplate> element in Simple XML files.\n Use the <search> element instead.", "name": "check_for_simple_xml_searchTemplate_element"}, {"result": "success", "messages": [], "description": "Check for the deprecated <seed> option in Simple XML forms.\n Use the <initialValue> element instead.", "name": "check_for_simple_xml_seed_element"}], "name": "check_splunk_6_3_deprecated_features", "description": "Deprecated features from Splunk Enterprise 6.3\nThese following features should not be supported in Splunk 6.3 or later. For more, see Deprecated features and Changes for Splunk App developers."}, {"checks": [{"result": "success", "messages": [], "description": "Check that <option name=\"height\"> uses an integer for the value. Do not\n use <option name=\"height\">[value]px</option>.", "name": "check_for_noninteger_height_option"}, {"result": "success", "messages": [], "description": "Check Simple XML files for <single> panels with deprecated options\n 'additionalClass', 'afterLabel', 'beforeLabel', 'classField', 'linkFields',\n 'linkSearch', 'linkView'", "name": "check_for_simple_xml_single_element_with_deprecated_option_names"}, {"result": "success", "messages": [], "description": "Checks that views are not importing d3chartview.", "name": "check_for_splunk_js_d3chartview"}, {"result": "success", "messages": [], "description": "Checks that views are not importing googlemapsview.", "name": "check_for_splunk_js_googlemapsview"}, {"result": "success", "messages": [], "description": "Check that the 'appServerPorts' property in the web.conf does not contain\n port 0.", "name": "check_for_splunk_web_legacy_mode"}, {"result": "success", "messages": [], "description": "Check that a web.conf does not use the property\n 'simple_xml_force_flash_charting'.", "name": "check_web_conf_for_simple_xml_force_flash_charting"}, {"result": "success", "messages": [], "description": "Check that web.conf does not use the simple_xml_module_render\n property.", "name": "check_web_conf_for_simple_xml_module_render"}], "name": "check_splunk_6_4_deprecated_features", "description": "Deprecated features from Splunk Enterprise 6.4\nThe following features should not be supported in Splunk 6.4 or later. For more, see Deprecated features and Changes for Splunk App developers."}, {"checks": [{"result": "success", "messages": [], "description": "Check Simple XML files for <list> element used in dashboards", "name": "check_for_simple_xml_list_element"}, {"result": "success", "messages": [], "description": "Check Simple XML files for <option> element with the deprecated option value \"refresh.auto.interval\"\n i.e. ", "name": "check_for_simple_xml_option_element_with_deprecated_attribute_value"}, {"result": "success", "messages": [], "description": "Checks that views are not importing splunkjs/mvc/headerview or splunkjs/mvc/footerrview.\n These are replaced by LayoutView in Splunk 6.5. LayoutView is not backwards compatible to Splunk 6.4 or earlier.\n Only use LayoutView if you are only targeting Splunk 6.5 or above.", "name": "check_for_splunk_js_header_and_footer_view"}], "name": "check_splunk_6_5_deprecated_features", "description": "Deprecated features from Splunk Enterprise 6.5\nThe following features should not be supported in Splunk 6.5 or later. For more, see Deprecated features and Changes for Splunk App developers."}, {"checks": [{"result": "success", "messages": [], "description": "Check that web.conf only defines [endpoint:] and [expose:]\n stanzas, with [expose:*] only containing pattern= and methods=.", "name": "check_web_conf"}, {"result": "success", "messages": [], "description": "Check that apps only expose web endpoints that are defined by\n the Splunk App within restmap.conf. Each web.conf\n [expose:] stanza should have the property pattern= which defines a url\n pattern to expose. Each url pattern exposed should correspond to a stanza\n within restmap.conf with a url pattern defined with the match=\n property, or for the case of [admin:] stanzas a combination of match= and\n members= properties.", "name": "check_web_conf_expose_patterns_have_restmap_matches"}], "name": "check_web_configuration_file", "description": "Web.conf File Standards\nEnsure that web.conf is safe for cloud deployment and that any exposed\npatterns match endpoints defined by the app - apps should not expose endpoints\nother than their own.\nIncluding web.conf can have adverse impacts for cloud. Allow only\n[endpoint:*] and [expose:*] stanzas, with expose only containing pattern=\nand methods= properties.\n\nweb.conf\n"}, {"checks": [{"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Documentation will be read during code review.\")", "filename": "check_external_data_sources.py", "result": "manual_check", "message_line": null, "line": 22, "message": "Documentation will be read during code review.", "message_filename": null}], "description": "Check that all external data sources are explained in the app's\n documentation.", "name": "check_external_data_sources"}], "name": "check_external_data_sources", "description": "Calls to external data sources"}, {"checks": [{"result": "success", "messages": [], "description": "Check that a valid inputs.conf.spec file are located in the README/\n directory.", "name": "check_inputs_conf"}, {"result": "success", "messages": [], "description": "Check that README/inputs.conf.spec contains stanzas.", "name": "check_inputs_conf_spec_has_stanzas"}, {"result": "success", "messages": [], "description": "Check that modular input stanzas do not contain duplicate arguments.", "name": "check_inputs_conf_spec_has_no_duplicate_properties"}, {"result": "success", "messages": [], "description": "Check that modular inputs do not have duplicate stanzas.", "name": "check_inputs_conf_spec_has_no_duplicate_stanzas"}, {"result": "success", "messages": [], "description": "Check lines breaks are included in configuration when using a modular\n input.", "name": "check_inputs_conf_spec_stanza_args_broken_correctly"}, {"result": "success", "messages": [], "description": "Check that modular inputs specify arguments.", "name": "check_inputs_conf_spec_stanzas_have_properties"}, {"result": "success", "messages": [], "description": "Check that there is a script file in bin/ for each modular input\n defined in README/inputs.conf.spec.", "name": "check_modular_inputs_scripts_exist"}], "name": "check_modular_inputs", "description": "Modular inputs structure and standards\nModular inputs are configured in an inputs.conf.spec file located in the /README directory of the app. For more, see Modular inputs overview, Modular inputs configuration, and Modular inputs basic example."}, {"checks": [{"result": "success", "messages": [], "description": "Check that all JSON files are well formed.", "name": "check_validate_json_data_is_well_formed"}], "name": "check_json_files", "description": "JSON file standards"}, {"checks": [{"result": "success", "messages": [], "description": "Check that .csv files are not empty, have at least two columns, have\n headers with no more than 4096 characters, do not use Macintosh-style (\\r)\n line endings, have the same number of columns in every row, and contain\n only UTF-8 characters.", "name": "check_lookup_csv_is_valid"}], "name": "check_lookup_files", "description": "Lookup file standards\nLookups add fields from an external source to events based on the values of fields that are already present in those events."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_saved_searches.py", "result": "not_applicable", "message_line": null, "line": 33, "message": "No savedsearches.conf file exists.", "message_filename": null}], "description": "Check that a savedsearches.conf file exists at\n default/savedsearches.conf.", "name": "check_saved_search_conf_exists"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_saved_searches.py", "result": "not_applicable", "message_line": null, "line": 97, "message": "No savedsearches.conf exists.", "message_filename": null}], "description": "Check that email alerts (action.email.to) set in savedsearches.conf\n do not have a default value.", "name": "check_for_emails_in_saved_search"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_saved_searches.py", "result": "not_applicable", "message_line": null, "line": 253, "message": "`default/savedsearches.conf` does not exist.", "message_filename": null}], "description": "Check that default/savedsearches.conf has no description properties\n that are empty.", "name": "check_for_empty_saved_search_description"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_saved_searches.py", "result": "not_applicable", "message_line": null, "line": 226, "message": "`default/savedsearches.conf` does not exist.", "message_filename": null}], "description": "Check that default/savedsearches.conf searches are cron scheduled\n reasonably. Less than five asterisks should be used.", "name": "check_for_gratuitous_cron_scheduling"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_saved_searches.py", "result": "not_applicable", "message_line": null, "line": 124, "message": "`default/savedsearches.conf` does not exist.", "message_filename": null}], "description": "Check that no real-time pre-index saved searches are being used in\n savedsearches.conf. Real-time per-index saved searches are extremely\n system intensive and should be avoided.", "name": "check_for_real_time_saved_searches"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_saved_searches.py", "result": "not_applicable", "message_line": null, "line": 287, "message": "No `default/savedsearches.conf`file exists.", "message_filename": null}], "description": "Check that if a scheduled saved search in savedsearch.conf contains dispatch.earliest_time option,\n or if a scheduled saved search with auto summary enabled contains auto_summarize.dispatch.earliest_time option", "name": "check_for_sched_saved_searches_earliest_time"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_saved_searches.py", "result": "not_applicable", "message_line": null, "line": 333, "message": "No `default/savedsearches.conf`file exists.", "message_filename": null}], "description": "Check that if a savedsearch.conf stanza contains scheduling options\n it does contain a dispatch.latest_time", "name": "check_for_sched_saved_searches_latest_time"}, {"result": "success", "messages": [], "description": "Check that saved searches have a search string specified.", "name": "check_saved_search_specifies_a_search"}, {"result": "success", "messages": [], "description": "Check that saved searches are enabled.", "name": "check_saved_searches_are_not_disabled"}], "name": "check_saved_searches", "description": "Saved search standards\nSaved searches are defined in a savedsearches.conf file located in the /default directory of the app. For more, see Save and share your reports and savedsearches.conf."}, {"checks": [{"result": "success", "messages": [], "description": "Check that the app.conf contains an application version number in the\n [launcher] stanza.", "name": "check_app_version"}, {"result": "success", "messages": [], "description": "Check that default/app.conf has author = <some words are not about Splunk> must not \n has attributes label or description with values of Splunk App for XXXX.", "name": "check_for_invalid_app_names"}, {"result": "success", "messages": [], "description": "Check in default/app.conf, install_source_checksum not be set explicitly.", "name": "check_no_install_source_checksum"}, {"result": "success", "messages": [], "description": "Check that default/app.conf setting is_configured = False.", "name": "check_that_setup_has_not_been_performed"}], "name": "check_app_configuration_file", "description": "App.conf standards\nThe app.conf file located at default/app.conf provides key application information and branding. For more, see app.conf."}, {"checks": [{"result": "success", "messages": [], "description": "Check that static/appIcon_2x is 72x72px or less", "name": "check_app_icon_2x_dimensions"}, {"result": "success", "messages": [], "description": "Check that static/appIcon_2x is a png file", "name": "check_app_icon_2x_is_png"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"static/appIconAlt_2x.png does not exist.\")", "filename": "check_application_content.py", "result": "not_applicable", "message_line": null, "line": 156, "message": "static/appIconAlt_2x.png does not exist.", "message_filename": null}], "description": "Check that static/appIconAlt_2x.png is 72x72px or less", "name": "check_app_icon_alt_2x_dimensions"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"static/appIconAlt_2x.png does not exist.\")", "filename": "check_application_content.py", "result": "not_applicable", "message_line": null, "line": 137, "message": "static/appIconAlt_2x.png does not exist.", "message_filename": null}], "description": "Check that static/appIconAlt_2x is a png file", "name": "check_app_icon_alt_2x_is_png"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"static/appIconAlt.png does not exist.\")", "filename": "check_application_content.py", "result": "not_applicable", "message_line": null, "line": 122, "message": "static/appIconAlt.png does not exist.", "message_filename": null}], "description": "Check that static/appIconAlt.png is 36x36px or less", "name": "check_app_icon_alt_dimensions"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"static/appIconAlt.png does not exist.\")", "filename": "check_application_content.py", "result": "not_applicable", "message_line": null, "line": 103, "message": "static/appIconAlt.png does not exist.", "message_filename": null}], "description": "Check that static/appIconAlt is a png file", "name": "check_app_icon_alt_is_png"}, {"result": "success", "messages": [], "description": "Check that static/appIcon is 36x36px or less", "name": "check_app_icon_dimensions"}, {"result": "success", "messages": [], "description": "Check that static/appIcon is a png file", "name": "check_app_icon_is_png"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"static/appLogo_2x.png does not exist.\")", "filename": "check_application_content.py", "result": "not_applicable", "message_line": null, "line": 225, "message": "static/appLogo_2x.png does not exist.", "message_filename": null}], "description": "Check that static/appLogo_2x.png is 320x80px or less", "name": "check_app_logo_2x_dimensions"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"static/appLogo_2x.png does not exist.\")", "filename": "check_application_content.py", "result": "not_applicable", "message_line": null, "line": 205, "message": "static/appLogo_2x.png does not exist.", "message_filename": null}], "description": "Check that static/appLogo_2x is a png file", "name": "check_app_logo_2x_is_png"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"static/appLogo.png does not exist.\")", "filename": "check_application_content.py", "result": "not_applicable", "message_line": null, "line": 190, "message": "static/appLogo.png does not exist.", "message_filename": null}], "description": "Check that static/appLogo.png is 160x40px or less", "name": "check_app_logo_dimensions"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"static/appLogo.png does not exist.\")", "filename": "check_application_content.py", "result": "not_applicable", "message_line": null, "line": 171, "message": "static/appLogo.png does not exist.", "message_filename": null}], "description": "Check that static/appLogo is a png file", "name": "check_app_logo_is_png"}], "name": "check_application_content", "description": "Application content structure standards\nEnsure that the application content adheres to Splunk standards."}, {"checks": [{"result": "success", "messages": [], "description": "Check that the 'local' directory does not exist. All configuration\n should be in the 'default' directory.", "name": "check_that_local_does_not_exist"}, {"result": "success", "messages": [], "description": "Check that app has no .conf or dashboard filenames that contain spaces.\n Splunk software does not support such files.", "name": "check_filenames_for_spaces"}, {"result": "success", "messages": [], "description": "Check that the file 'local.meta' does not exist. All metadata\n permissions should be set in 'default.meta'.", "name": "check_for_local_meta"}, {"result": "success", "messages": [], "description": "Check that the app name does not start with digits", "name": "check_that_app_name_config_is_valid"}, {"result": "success", "messages": [], "description": "Check that when decompressed the Splunk App directory name matches the\n app.conf [package] stanza's id property.", "name": "check_that_directory_name_matches_package_id"}], "name": "check_application_structure", "description": "Directory structure standards\nEnsure that the directories and files in the app adhere to hierarchy standards."}, {"checks": [{"result": "success", "messages": [], "description": "Check that all config files parse cleanly- no trailing whitespace after\n continuations, no duplicated stanzas or options.", "name": "check_config_file_parsing"}, {"result": "success", "messages": [], "description": "Check that app conf files do not point to files outside the app container. \n Because hard-coded paths won't work in Splunk Cloud, we don't consider to \n check absolute paths.", "name": "check_manipulation_outside_of_app_container"}, {"result": "success", "messages": [], "description": "Check that app does not contain any .conf files that create global\n definitions using the [default] stanza.", "name": "check_no_default_stanzas"}, {"result": "success", "messages": [], "description": "Check that no duplicate\n stanzas exist in .conf files.", "name": "check_validate_no_duplicate_stanzas_in_conf_files"}], "name": "check_configuration_files", "description": "Configuration file standards\nEnsure that all configuration files located in the /default folder are well formed and valid."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_indexes_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 91, "message": "No `default/indexes.conf` file exists.", "message_filename": null}], "description": "Check that all index definitions exist all required options including:\n homePath, coldPath, and thawedPath.", "name": "check_index_definition_has_required_options"}, {"result": "success", "messages": [], "description": "Check that the app does not create indexes.", "name": "check_indexes_conf_does_not_exist"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_indexes_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 54, "message": "No `default/indexes.conf`file exists.", "message_filename": null}], "description": "Check that no default Splunk indexes are modified by the app.", "name": "check_validate_default_indexes_not_modified"}], "name": "check_indexes_configuration_file", "description": "Indexes.conf file standards\nEnsure that the index configuration file located in the /default folder is well formed and valid. For more, see indexes.conf."}, {"checks": [{"result": "success", "messages": [], "description": "Check that all .meta files parse with no trailing whitespace after\n continuations with no duplicate stanzas or options.", "name": "check_meta_file_parsing"}, {"result": "success", "messages": [], "description": "Check that .meta files do not have duplicate\n stanzas.", "name": "check_validate_no_duplicate_stanzas_in_meta_files"}], "name": "check_meta_files", "description": "Meta file standards\nEnsure that all meta files located in the /metadata folder are well formed and valid."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_props_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 138, "message": "No props.conf file exists.", "message_filename": null}], "description": "Check that there is a 'transforms.conf' file when REPORT- options are\n defined in props.conf.", "name": "check_props_conf_has_report_option_and_transforms_conf_exist"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_props_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 186, "message": "No props.conf file exists.", "message_filename": null}], "description": "Check that each REPORT- in props.conf has an associated stanza in\n transforms.conf file.", "name": "check_props_conf_has_report_option_and_transforms_conf_has_matching_stanza"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_props_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 257, "message": "No props.conf file exists.", "message_filename": null}], "description": "Check that REPORT- options in props.conf, have either DELIMS or REGEX\n options in the matching transforms.conf stanza.", "name": "check_props_conf_has_report_option_and_transforms_conf_has_required_option"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_props_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 56, "message": "No props.conf file exists.", "message_filename": null}], "description": "Check that there is a 'transforms.conf' file when TRANSFORM- options\n are defined in props.conf.", "name": "check_props_conf_has_transforms_option_and_transforms_conf_exist"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_props_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 101, "message": "No props.conf file exists.", "message_filename": null}], "description": "Check that TRANSFORM- options in props.conf have associated stanzas in\n transforms.conf file.", "name": "check_props_conf_has_transforms_option_and_transforms_conf_has_matching_stanza"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_props_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 311, "message": "No props.conf file exists.", "message_filename": null}], "description": "Check that the props.conf stanzas (delayedrule, host, rule, or source)\n are followed by ::.\nFor example:\n\n[host::nyc*]\n[rule::bar_some]\n", "name": "check_props_conf_regex_stanza_name_followed_by_double_colon"}], "name": "check_props_configuration_file", "description": "Props Configuration file standards\nEnsure that all props.conf files located in the default (or local) folder are well\nformed and valid.\n\nprops.conf\ntransforms.conf\n"}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No transforms.conf in app.\")", "filename": "check_transforms_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 49, "message": "No transforms.conf in app.", "message_filename": null}], "description": "Check that all files in the /lookups directory are referenced in\n transforms.conf.", "name": "check_all_lookups_are_used"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No transforms.conf in app.\")", "filename": "check_transforms_configuration_file.py", "result": "not_applicable", "message_line": null, "line": 107, "message": "No transforms.conf in app.", "message_filename": null}], "description": "Check that all capture groups are used in transforms.conf.\n Groups not used for capturing should use the\n non-capture group syntax", "name": "check_capture_groups_in_transforms"}], "name": "check_transforms_configuration_file", "description": "Transforms.conf file standards\nEnsure that the transforms.conf file located in the /default folder is well formed and valid. For more, see transforms.conf."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_alert_actions_config.py", "result": "not_applicable", "message_line": null, "line": 32, "message": "An alert_actions.conf does not exist in the app bundle.", "message_filename": null}], "description": "Check that a valid alert_actions.conf file exists at\n default/alert_actions.conf.", "name": "check_alert_actions_conf_exists"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_alert_actions_config.py", "result": "not_applicable", "message_line": null, "line": 126, "message": "No `alert_actions.conf` was detected.", "message_filename": null}], "description": "Check that each custom alert action has a valid executable.", "name": "check_alert_actions_exe_exist"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_alert_actions_config.py", "result": "not_applicable", "message_line": null, "line": 68, "message": "No alert_actions.conf was found.", "message_filename": null}], "description": "Check that icon files defined for alert actions in alert_actions.conf\n exist.\n Custom Alert Action Component Reference", "name": "check_alert_icon_exists_for_custom_alerts"}, {"result": "success", "messages": [], "description": "Check whether any custom alert actions have executable arguments.", "name": "check_for_explict_exe_args"}, {"result": "success", "messages": [], "description": "Check that each custom alert action's payload format has a value of xml\n or json.", "name": "check_for_payload_format"}, {"result": "success", "messages": [], "description": "Check that each custom alert action has an associated html file.", "name": "check_workflow_html_exists_for_custom_alert"}], "name": "check_alert_actions_config", "description": "Alert actions structure and standards\nCustom alert actions are defined in an alert_actions.conf file located in the /default directory of the app. For more, see Custom alert actions overview and alert_actions.conf."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_message)", "filename": "check_custom_commands.py", "result": "not_applicable", "message_line": null, "line": 30, "message": "No commands.conf exists.", "message_filename": null}], "description": "Check that commands.conf exists at default/commands.conf.", "name": "check_command_conf_exists"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No `commands.conf` file exists.\")", "filename": "check_custom_commands.py", "result": "not_applicable", "message_line": null, "line": 122, "message": "No `commands.conf` file exists.", "message_filename": null}], "description": "Check that custom search commands have an executable or script per\n stanza.", "name": "check_command_scripts_exist"}, {"result": "success", "messages": [], "description": "Check that a valid\n default.meta\n file exists when using a custom search command.", "name": "check_default_meta_exists"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No `commands.conf` file exists.\")", "filename": "check_custom_commands.py", "result": "not_applicable", "message_line": null, "line": 185, "message": "No `commands.conf` file exists.", "message_filename": null}], "description": "Check that the custom commands attributes maxwait and maxchunksize\n are only used when chunked = true.\n Commands.conf reference", "name": "check_ignored_parameters_v1_command"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No `commands.conf` file exists.\")", "filename": "check_custom_commands.py", "result": "not_applicable", "message_line": null, "line": 155, "message": "No `commands.conf` file exists.", "message_filename": null}], "description": "Check for ignored arguments in commands.conf when chunked=true.\n Commands.conf reference", "name": "check_ignored_parameters_v2_command"}, {"result": "success", "messages": [], "description": "Check that custom search commands using passauth have enableheader\n set to true.", "name": "check_passauth_and_enableheader"}, {"result": "success", "messages": [], "description": "Check that custom search commands using requires_preop have\n streaming_preop set to true.", "name": "check_requires_preop_and_streaming_preop"}, {"result": "success", "messages": [], "description": "Check that custom search commands using requires_srinfo have\n enableheader set to true.", "name": "check_requires_srinfo_and_enableheader"}], "name": "check_custom_commands", "description": "Custom search command structure and standards\nCustom search commands are defined in a commands.conf file in the /default directory of the app. For more, see About writing custom search commands and commands.conf."}, {"checks": [{"result": "success", "messages": [], "description": "Check that stanzas in workflow_actions.conf.spec have the required\n fields, type, and label.", "name": "check_required_stanza_fields_are_specified"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_workflow_actions.py", "result": "not_applicable", "message_line": null, "line": 32, "message": "The 'workflow_actions.conf' does not exist.", "message_filename": null}], "description": "Check that a valid workflow_actions.conf file exists at\n default/workflow_actions.conf.", "name": "check_workflow_actions_conf_exists"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_workflow_actions.py", "result": "not_applicable", "message_line": null, "line": 101, "message": "`workflow_actions.conf` does not exist.", "message_filename": null}], "description": "Check that for each workflow action in workflow_actions.conf the\n link.uri property uses the https protocol for external links. Unencrypted\n http is permitted for internal links.", "name": "check_workflow_actions_link_uri_does_not_use_http_protocol"}], "name": "check_workflow_actions", "description": "Custom workflow actions structure and standards\nCustom workflow actions are defined in a workflow_actions.conf file in the /default directory of the app. For more, see About lookups and workflow_actions.conf."}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_rest_endpoints.py", "result": "not_applicable", "message_line": null, "line": 32, "message": "No restmap.conf file exists.", "message_filename": null}], "description": "Check that restmap.conf file exists at default/restmap.conf when\n using REST endpoints.", "name": "check_restmap_conf_exists"}, {"result": "success", "messages": [], "description": "Check that each stanza in restmap.conf has a matching handler script.\n if not, fail this app.", "name": "check_rest_handler_scripts_exist"}], "name": "check_rest_endpoints", "description": "REST endpoints and handler standards\nREST endpoints are defined in a restmap.conf file in the /default directory of the app. For more, see restmap.conf."}, {"checks": [{"result": "success", "messages": [], "description": "Check that when using data models, the datamodels.conf file only exists\n in the default directory.", "name": "check_validate_data_models_conf_file_in_correct_locations"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No datamodels.conf file exists.\")", "filename": "check_data_models_config.py", "result": "not_applicable", "message_line": null, "line": 108, "message": "No datamodels.conf file exists.", "message_filename": null}], "description": "Check that the use of accelerated data models do not occur. If data model\n acceleration is required, developers should provide directions in documentation\n for how to accelerate data models from within the Splunk Web GUI.\ndata model acceleration", "name": "check_for_datamodel_acceleration"}, {"result": "success", "messages": [], "description": "Check that each stanza in\n datamodels.conf\n has a matching JSON file in default/data/models/.", "name": "check_validate_no_missing_json_data"}], "name": "check_data_models_config", "description": "Data model files and configurations\nData models are defined in a datamodels.conf file in the /default directory of the app. For more, see About data models and datamodels.conf."}, {"checks": [{"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Branding will be inspected during code review.\")", "filename": "check_intellectual_property.py", "result": "manual_check", "message_line": null, "line": 26, "message": "Branding will be inspected during code review.", "message_filename": null}], "description": "Check that use of the Splunk logo and name meets Splunk\n branding guidelines.\n Customers should avoid using logos that are similar to the Splunk \n logos including the splunk chevron. These are copyrighted items\n and should only be used by Splunk. Additionally apps built by 3rd \n parties should not have names starting with Splunk.", "name": "check_splunk_logo"}], "name": "check_intellectual_property", "description": "Intellectual property standards"}, {"checks": [{"result": "success", "messages": [], "description": "Check that the python __import__ method is not used in a way that\n can be exploited (e.g., import(conf_setting) is at risk of code \n injection).", "name": "check_built_in_import_function"}, {"result": "success", "messages": [], "description": "Check that there are no .pyc or .pyo files included in the app.", "name": "check_for_compiled_python"}], "name": "check_python_files", "description": "Python file standards"}, {"checks": [{"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Code will be manually inspected during code review.\")", "filename": "check_malware.py", "result": "manual_check", "message_line": null, "line": 57, "message": "Code will be manually inspected during code review.", "message_filename": null}], "description": "Check that no plain text authorization credentials are stored in the\n app.", "name": "check_authorization_credentials"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Links will be manually inspected during code review.\")", "filename": "check_malware.py", "result": "manual_check", "message_line": null, "line": 48, "message": "Links will be manually inspected during code review.", "message_filename": null}], "description": "Check that embedded links included in the app are not malicious.", "name": "check_embedded_links"}, {"result": "success", "messages": [], "description": "Check that the app does not include any offensive material.", "name": "check_for_offensive_material"}, {"result": "success", "messages": [], "description": "Check that no sensitive hostnames/IPs are stored in the app.", "name": "check_hostnames_and_ips"}], "name": "check_malware", "description": "Malware, viruses, malicious content, user security standards"}, {"checks": [{"result": "success", "messages": [], "description": "Check for the use of malicious shell commands in configuration files or shell scripts to\n corrupt the OS or Splunk instance. Other scripting languages are covered by other checks.", "name": "check_destructive_commands"}, {"result": "manual_check", "messages": [{"code": "\"File access will be inspected during code review.\")", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": null, "line": 125, "message": "File access will be inspected during code review.", "message_filename": null}], "description": "Check that applications only write to the following directories\n <SPLUNK_HOME>/etc/<APP_NAME>/local,\n <SPLUNK_HOME>/etc/<APP_NAME>/lookup\n<SPLUNK_HOME>/var/log/<APP_NAME>/<LOG_NAME>.log,\n <SPLUNK_HOME>/var/log/<APP_NAME>.log\n<SPLUNK_HOME>/var/run and OS temporary directories.", "name": "check_fs_writes"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "4", "line": 67, "message": "Found possible hard-coded path '/>'.File: LICENSE, Line: 4. File: LICENSE Line Number: 4", "message_filename": "LICENSE"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "648", "line": 67, "message": "Found possible hard-coded path '/licenses/>.'.File: LICENSE, Line: 648. File: LICENSE Line Number: 648", "message_filename": "LICENSE"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "667", "line": 67, "message": "Found possible hard-coded path '/licenses/>.'.File: LICENSE, Line: 667. File: LICENSE Line Number: 667", "message_filename": "LICENSE"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "674", "line": 67, "message": "Found possible hard-coded path '/philosophy/why-not-lgpl.html>.'.File: LICENSE, Line: 674. File: LICENSE Line Number: 674", "message_filename": "LICENSE"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "5", "line": 67, "message": "Found possible hard-coded path '/osboxes/node_modules/debug\"'.File: bin/ms/package.json, Line: 5. File: bin/ms/package.json Line Number: 5", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "16", "line": 67, "message": "Found possible hard-coded path '/ms-2.0.0.tgz_1494937565215_0.34005374647676945\"'.File: bin/ms/package.json, Line: 16. File: bin/ms/package.json Line Number: 16", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "35", "line": 67, "message": "Found possible hard-coded path '/ms/-/ms-2.0.0.tgz\",'.File: bin/ms/package.json, Line: 35. File: bin/ms/package.json Line Number: 35", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "39", "line": 67, "message": "Found possible hard-coded path '/osboxes/node_modules/debug\",'.File: bin/ms/package.json, Line: 39. File: bin/ms/package.json Line Number: 39", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "41", "line": 67, "message": "Found possible hard-coded path '/zeit/ms/issues\"'.File: bin/ms/package.json, Line: 41. File: bin/ms/package.json Line Number: 41", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "55", "line": 67, "message": "Found possible hard-coded path '/ms/-/ms-2.0.0.tgz\"'.File: bin/ms/package.json, Line: 55. File: bin/ms/package.json Line Number: 55", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "68", "line": 67, "message": "Found possible hard-coded path '/zeit/ms#readme\",'.File: bin/ms/package.json, Line: 68. File: bin/ms/package.json Line Number: 68", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "93", "line": 67, "message": "Found possible hard-coded path '/zeit/ms.git\"'.File: bin/ms/package.json, Line: 93. File: bin/ms/package.json Line Number: 93", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "96", "line": 67, "message": "Found possible hard-coded path '/*\",'.File: bin/ms/package.json, Line: 96. File: bin/ms/package.json Line Number: 96", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "5", "line": 67, "message": "Found possible hard-coded path '/osboxes/node_modules/http-proxy\"'.File: bin/requires-port/package.json, Line: 5. File: bin/requires-port/package.json Line Number: 5", "message_filename": "bin/requires-port/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "31", "line": 67, "message": "Found possible hard-coded path '/requires-port/-/requires-port-1.0.0.tgz\",'.File: bin/requires-port/package.json, Line: 31. File: bin/requires-port/package.json Line Number: 31", "message_filename": "bin/requires-port/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "35", "line": 67, "message": "Found possible hard-coded path '/osboxes/node_modules/http-proxy\",'.File: bin/requires-port/package.json, Line: 35. File: bin/requires-port/package.json Line Number: 35", "message_filename": "bin/requires-port/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "40", "line": 67, "message": "Found possible hard-coded path '/unshiftio/requires-port/issues\"'.File: bin/requires-port/package.json, Line: 40. File: bin/requires-port/package.json Line Number: 40", "message_filename": "bin/requires-port/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "53", "line": 67, "message": "Found possible hard-coded path '/requires-port/-/requires-port-1.0.0.tgz\"'.File: bin/requires-port/package.json, Line: 53. File: bin/requires-port/package.json Line Number: 53", "message_filename": "bin/requires-port/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "56", "line": 67, "message": "Found possible hard-coded path '/unshiftio/requires-port\",'.File: bin/requires-port/package.json, Line: 56. File: bin/requires-port/package.json Line Number: 56", "message_filename": "bin/requires-port/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "92", "line": 67, "message": "Found possible hard-coded path '/unshiftio/requires-port.git\"'.File: bin/requires-port/package.json, Line: 92. File: bin/requires-port/package.json Line Number: 92", "message_filename": "bin/requires-port/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "5", "line": 67, "message": "Found possible hard-coded path '/osboxes/node_modules/http-proxy\"'.File: bin/eventemitter3/package.json, Line: 5. File: bin/eventemitter3/package.json Line Number: 5", "message_filename": "bin/eventemitter3/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "16", "line": 67, "message": "Found possible hard-coded path '/eventemitter3_3.1.0_1524686033911_0.48391916986617156\"'.File: bin/eventemitter3/package.json, Line: 16. File: bin/eventemitter3/package.json Line Number: 16", "message_filename": "bin/eventemitter3/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "35", "line": 67, "message": "Found possible hard-coded path '/eventemitter3/-/eventemitter3-3.1.0.tgz\",'.File: bin/eventemitter3/package.json, Line: 35. File: bin/eventemitter3/package.json Line Number: 35", "message_filename": "bin/eventemitter3/package.json"}, {"code": "reporter.manual_check(reporter_output, file_name, line_number)", "filename": "check_potentially_harmful_operations.py", "result": "manual_check", "message_line": "39", "line": 67, "message": "Found possible hard-coded path '/osboxes/node_modules/http-proxy\",'.File: bin/eventemitter3/package.json, Line: 39. File: bin/eventemitter3/package.json Line Number: 39", "message_filename": "bin/eventemitter3/package.json"}, {"code": "in reporter.report_records(max_records=max_messages)]", "filename": "validation_report_json_formatter.py", "result": "warning", "message_line": null, "line": 56, "message": "Suppressed 60 manual_check messages", "message_filename": null}], "description": "Check for hard-coded filepaths in scripts relative to author's local\n developer environment, or absolute paths.", "name": "check_hard_coded_paths"}, {"result": "success", "messages": [], "description": "Check that scripts are not trying to switch into other user accounts,\n create new users, run sudo.", "name": "check_user_privileges"}], "name": "check_potentially_harmful_operations", "description": "Operating system standards"}, {"checks": [{"result": "success", "messages": [], "description": "Check for command injection through environment variables.", "name": "check_for_command_injection_through_env_vars"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output, filename, line)", "filename": "check_security.py", "result": "manual_check", "message_line": "16", "line": 178, "message": "Environment variable being used in bin/edfs.py:16: os.environ.File: bin/edfs.py, Line: 16. File: bin/edfs.py Line Number: 16", "message_filename": "bin/edfs.py"}], "description": "Check for environment variable manipulation and attempts to monitor\n sensitive environment variables.", "name": "check_for_environment_variable_use_in_python"}, {"result": "success", "messages": [], "description": "Check for insecure HTTP calls in Python.", "name": "check_for_insecure_http_calls_in_python"}, {"result": "success", "messages": [], "description": "Check for use of pexpect to ensure it is only controlling app \n processes.", "name": "check_for_pexpect"}, {"result": "success", "messages": [], "description": "Check for passwords and secrets.", "name": "check_for_secret_disclosure"}, {"result": "success", "messages": [], "description": "Check for sensitive information being exposed in transit via URL query string parameters", "name": "check_for_sensitive_info_in_url"}, {"result": "success", "messages": [], "description": "Check that stack traces are not being returned to an end user.", "name": "check_for_stacktrace_returned_to_user"}, {"result": "success", "messages": [], "description": "Check for command injection in VBS files.", "name": "check_for_vbs_command_injection"}, {"result": "success", "messages": [], "description": "Check no symlink points to the file outside this app", "name": "check_symlink_outside_app"}], "name": "check_security", "description": "Security vulnerabilities"}, {"checks": [{"result": "success", "messages": [], "description": "Check that files outside of the bin/ and appserver/controllers directory do not have execute\n permissions and are not .exe files. Splunk recommends 644 for all app files\n outside of the bin/ directory, 644 for scripts within the bin/ directory\n that are invoked using an interpreter (e.g. python my_script.py or\n sh my_script.sh), and 755 for scripts within the bin/ directory that are\n invoked directly (e.g. ./my_script.sh or ./my_script).", "name": "check_for_bin_files"}, {"result": "success", "messages": [], "description": "Check that files outside of the bin/ directory do not appear to be\n executable according to the Unix file command. From man file: files have\n a ``magic number'' stored in a particular place near the beginning of the\n file that tells the UNIX operating system that the file is a binary\n executable.", "name": "check_for_executable_flag"}, {"result": "success", "messages": [], "description": "Check that no files have *nix write permissions for all users\n (xx2, xx6, xx7). Splunk recommends 644 for all app files outside of the\n bin/ directory, 644 for scripts within the bin/ directory that are\n invoked using an interpreter (e.g. python my_script.py or\n sh my_script.sh), and 755 for scripts within the bin/ directory that are\n invoked directly (e.g. ./my_script.sh or ./my_script).\n Since appinspect 1.6.1, check that no files have nt write permissions for all users.", "name": "check_for_expansive_permissions"}, {"result": "success", "messages": [], "description": "Check that there are no hidden files or directories.", "name": "check_for_hidden_files"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "4", "line": 168, "message": "A file was detected that contains that a url. Match: http://fsf.org/> File: LICENSE Line: 4 File: LICENSE Line Number: 4", "message_filename": "LICENSE"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "648", "line": 168, "message": "A file was detected that contains that a url. Match: http://www.gnu.org/licenses/>. File: LICENSE Line: 648 File: LICENSE Line Number: 648", "message_filename": "LICENSE"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "667", "line": 168, "message": "A file was detected that contains that a url. Match: http://www.gnu.org/licenses/>. File: LICENSE Line: 667 File: LICENSE Line Number: 667", "message_filename": "LICENSE"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "674", "line": 168, "message": "A file was detected that contains that a url. Match: http://www.gnu.org/philosophy/why-not-lgpl.html>. File: LICENSE Line: 674 File: LICENSE Line Number: 674", "message_filename": "LICENSE"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "21", "line": 168, "message": "A file was detected that contains that a url. Match: http://127.0.0.1: File: bin/dash-proxy.js Line: 21 File: bin/dash-proxy.js Line Number: 21", "message_filename": "bin/dash-proxy.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "35", "line": 168, "message": "A file was detected that contains that a url. Match: https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\", File: bin/ms/package.json Line: 35 File: bin/ms/package.json Line Number: 35", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "41", "line": 168, "message": "A file was detected that contains that a url. Match: https://github.com/zeit/ms/issues\" File: bin/ms/package.json Line: 41 File: bin/ms/package.json Line Number: 41", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "55", "line": 168, "message": "A file was detected that contains that a url. Match: https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\" File: bin/ms/package.json Line: 55 File: bin/ms/package.json Line Number: 55", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "68", "line": 168, "message": "A file was detected that contains that a url. Match: https://github.com/zeit/ms#readme\", File: bin/ms/package.json Line: 68 File: bin/ms/package.json Line Number: 68", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "93", "line": 168, "message": "A file was detected that contains that a url. Match: https://github.com/zeit/ms.git\" File: bin/ms/package.json Line: 93 File: bin/ms/package.json Line Number: 93", "message_filename": "bin/ms/package.json"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "31", "line": 168, "message": "A file was detected that contains that a url. Match: http://www.google.com File: bin/requires-port/test.js Line: 31 File: bin/requires-port/test.js Line Number: 31", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "36", "line": 168, "message": "A file was detected that contains that a url. Match: http://www.google.com File: bin/requires-port/test.js Line: 36 File: bin/requires-port/test.js Line Number: 36", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "43", "line": 168, "message": "A file was detected that contains that a url. Match: ws://www.google.com File: bin/requires-port/test.js Line: 43 File: bin/requires-port/test.js Line Number: 43", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "48", "line": 168, "message": "A file was detected that contains that a url. Match: ws://www.google.com File: bin/requires-port/test.js Line: 48 File: bin/requires-port/test.js Line Number: 48", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "55", "line": 168, "message": "A file was detected that contains that a url. Match: https://www.google.com File: bin/requires-port/test.js Line: 55 File: bin/requires-port/test.js Line Number: 55", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "60", "line": 168, "message": "A file was detected that contains that a url. Match: https://www.google.com File: bin/requires-port/test.js Line: 60 File: bin/requires-port/test.js Line Number: 60", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "67", "line": 168, "message": "A file was detected that contains that a url. Match: wss://www.google.com File: bin/requires-port/test.js Line: 67 File: bin/requires-port/test.js Line Number: 67", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "72", "line": 168, "message": "A file was detected that contains that a url. Match: wss://www.google.com File: bin/requires-port/test.js Line: 72 File: bin/requires-port/test.js Line Number: 72", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "79", "line": 168, "message": "A file was detected that contains that a url. Match: ftp://www.google.com File: bin/requires-port/test.js Line: 79 File: bin/requires-port/test.js Line Number: 79", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "84", "line": 168, "message": "A file was detected that contains that a url. Match: ftp://www.google.com File: bin/requires-port/test.js Line: 84 File: bin/requires-port/test.js Line Number: 84", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "91", "line": 168, "message": "A file was detected that contains that a url. Match: gopher://www.google.com File: bin/requires-port/test.js Line: 91 File: bin/requires-port/test.js Line Number: 91", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "96", "line": 168, "message": "A file was detected that contains that a url. Match: gopher://www.google.com File: bin/requires-port/test.js Line: 96 File: bin/requires-port/test.js Line Number: 96", "message_filename": "bin/requires-port/test.js"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "31", "line": 168, "message": "A file was detected that contains that a url. Match: https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz\", File: bin/requires-port/package.json Line: 31 File: bin/requires-port/package.json Line Number: 31", "message_filename": "bin/requires-port/package.json"}, {"code": "reporter.manual_check(reporter_output, filename, line_number)", "filename": "check_source_and_binaries.py", "result": "manual_check", "message_line": "40", "line": 168, "message": "A file was detected that contains that a url. Match: https://github.com/unshiftio/requires-port/issues\" File: bin/requires-port/package.json Line: 40 File: bin/requires-port/package.json Line Number: 40", "message_filename": "bin/requires-port/package.json"}, {"code": "in reporter.report_records(max_records=max_messages)]", "filename": "validation_report_json_formatter.py", "result": "warning", "message_line": null, "line": 56, "message": "Suppressed 130 manual_check messages", "message_filename": null}], "description": "Check that URLs do not include redirect or requests from external web\n sites.", "name": "check_for_urls_in_files"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_source_and_binaries.py", "result": "not_applicable", "message_line": null, "line": 296, "message": "No platform-specific binaries found.", "message_filename": null}], "description": "Check that documentation declares platform-specific binaries.", "name": "check_platform_specific_binaries"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_source_and_binaries.py", "result": "not_applicable", "message_line": null, "line": 196, "message": "Didn't find any flash files.", "message_filename": null}], "description": "Check that the app does not use Adobe Flash files.", "name": "check_requires_adobe_flash"}], "name": "check_source_and_binaries", "description": "Source code and binaries standards"}, {"checks": [{"result": "success", "messages": [], "description": "Check that the app has a /README file that includes\n version support, system requirements, installation, configuration,\n troubleshooting and running of the app, or a link to online documentation.", "name": "check_basic_readme"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No commands.conf file exists.\")", "filename": "check_documentation_standards.py", "result": "not_applicable", "message_line": null, "line": 136, "message": "No commands.conf file exists.", "message_filename": null}], "description": "Check that use of custom commands\n is explained in the app's documentation.", "name": "check_custom_commands"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No savedsearches.conf file exists.\")", "filename": "check_documentation_standards.py", "result": "not_applicable", "message_line": null, "line": 122, "message": "No savedsearches.conf file exists.", "message_filename": null}], "description": "Check that use of\n report acceleration,\n search acceleration, or summary indexing is explained in the app's\n documentation.", "name": "check_search_acceleration"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Documentation will be read during code review.\")", "filename": "check_documentation_standards.py", "result": "manual_check", "message_line": null, "line": 147, "message": "Documentation will be read during code review.", "message_filename": null}], "description": "Check that prerequisites of the app are explained in the app's\n documentation. All prerequisites must be either\n packaged with your app, or be available on Splunkbase.", "name": "check_dependencies"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Documentation will be read during code review.\")", "filename": "check_documentation_standards.py", "result": "manual_check", "message_line": null, "line": 105, "message": "Documentation will be read during code review.", "message_filename": null}], "description": "Check that all open source components used in developing the app are\n listed in the app's README files with the version number and a link to the\n project's website.", "name": "check_documented_included_open_source"}, {"result": "success", "messages": [], "description": "Check that documentation is in English.", "name": "check_documentation_language"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Documentation will be read during code review.\")", "filename": "check_documentation_standards.py", "result": "manual_check", "message_line": null, "line": 94, "message": "Documentation will be read during code review.", "message_filename": null}], "description": "Check that documentation is free of major editing and\n proofreading (spelling, grammar, punctuation) issues.", "name": "check_editing_and_proofreading"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(reporter_output)", "filename": "check_documentation_standards.py", "result": "not_applicable", "message_line": null, "line": 163, "message": "No archived files found in app.", "message_filename": null}], "description": "Check that any compressed archives within the main release that\n need extracting are explained in the app's documentation.", "name": "check_archived_files"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No outputs.conf file exists.\")", "filename": "check_documentation_standards.py", "result": "not_applicable", "message_line": null, "line": 185, "message": "No outputs.conf file exists.", "message_filename": null}], "description": "Check that forwarding enabled in 'outputs.conf' is explained in the\n app's documentation.", "name": "check_outputs_documented"}], "name": "check_documentation_standards", "description": "Documentation standards"}, {"checks": [{"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No datamodels.conf file exists.\")", "filename": "check_documentation_for_sensitive_functionality.py", "result": "not_applicable", "message_line": null, "line": 55, "message": "No datamodels.conf file exists.", "message_filename": null}], "description": "Check that the use of datamodels is explained in the app's\n documentation.", "name": "check_implements_data_models"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Documentation will be read during code review.\")", "filename": "check_documentation_for_sensitive_functionality.py", "result": "manual_check", "message_line": null, "line": 66, "message": "Documentation will be read during code review.", "message_filename": null}], "description": "Check that the use of\n inputcsv\n is explained in the app's documentation.", "name": "check_implements_inputcsv"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Documentation will be read during code review.\")", "filename": "check_documentation_for_sensitive_functionality.py", "result": "manual_check", "message_line": null, "line": 79, "message": "Documentation will be read during code review.", "message_filename": null}], "description": "Check that the use of\n outputcsv\n is explained in the app's documentation.", "name": "check_implements_outputcsv"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Documentation will be read during code review.\")", "filename": "check_documentation_for_sensitive_functionality.py", "result": "manual_check", "message_line": null, "line": 41, "message": "Documentation will be read during code review.", "message_filename": null}], "description": "Check that use of\n 'tscollect'\n is explained in the app's documentation.", "name": "check_implements_tscollect"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No outputs.conf exists.\")", "filename": "check_documentation_for_sensitive_functionality.py", "result": "not_applicable", "message_line": null, "line": 95, "message": "No outputs.conf exists.", "message_filename": null}], "description": "Check that any outbound network communications in\n outputs.conf\n are explained in the app's documentation.", "name": "check_initiates_outbound_communications"}, {"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"File access will be inspected during code review.\")", "filename": "check_documentation_for_sensitive_functionality.py", "result": "manual_check", "message_line": null, "line": 105, "message": "File access will be inspected during code review.", "message_filename": null}], "description": "Check that file access outside of the app's home directory,\n $SPLUNK_HOME/var/log, $SPLUNK_HOME/var/run, and system temporary directories\n is explained in the app's documentation.", "name": "check_requires_access_to_files_outside_apps_dir"}, {"result": "not_applicable", "messages": [{"code": "reporter.not_applicable(\"No eventgen.conf file exists.\")", "filename": "check_documentation_for_sensitive_functionality.py", "result": "not_applicable", "message_line": null, "line": 29, "message": "No eventgen.conf file exists.", "message_filename": null}], "description": "Check that use of 'eventgen.conf' is explained in the app's\n documentation.", "name": "check_uses_eventgen"}], "name": "check_documentation_for_sensitive_functionality", "description": "Appropriate use of sensitive functionality"}, {"checks": [{"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"App will be checked during code review.\")", "filename": "check_support_and_installation_standards.py", "result": "manual_check", "message_line": null, "line": 24, "message": "App will be checked during code review.", "message_filename": null}], "description": "Check that the app installs on all claimed target platforms.", "name": "check_install_on_claimed_targets"}, {"result": "success", "messages": [], "description": "Check that the app can be setup on a distributed system after\n self-service. Warn if setup configures non-search-head features like\n inputs. This makes the app incompatible with distributed environments.", "name": "check_setup_in_distributed_environment"}], "name": "check_support_and_installation_standards", "description": "Platform targets and claimed supported Splunk Enterprise versions"}, {"checks": [{"result": "manual_check", "messages": [{"code": "reporter.manual_check(\"Documentation will be read during code review.\")", "filename": "check_support_requirements.py", "result": "manual_check", "message_line": null, "line": 30, "message": "Documentation will be read during code review.", "message_filename": null}], "description": "Check that the app's documentation lists contact information and level\n of support for the app. Any level of support is acceptable for developer\n supported apps, as long as it is clearly declared in documentation.\n Community supported apps must be open source with a public repository.\n For example:\n * Email support during weekday business hours (US, West Coast).\n * Phone support 24x7 @ +1 (555) 123-4567.\n * This is an open source project, no support provided, public repository\n available.", "name": "check_link_includes_contact_info"}], "name": "check_support_requirements", "description": "Support requirements"}, {"checks": [{"result": "success", "messages": [], "description": "Check that all XML files are well-formed.", "name": "check_that_all_xml_files_are_well_formed"}, {"result": "success", "messages": [], "description": "Check any XML files that embed JavaScript via CDATA for compliance\n with Splunk Cloud security policy.", "name": "check_validate_no_embedded_javascript"}, {"result": "success", "messages": [], "description": "Ensure that global event handlers are not used within XML files.", "name": "check_validate_no_event_handler"}], "name": "check_xml_files", "description": "XML file standards"}], "app_author": "M. Uschmann / MuS", "app_version": "0.1.0", "app_hash": "017a62672ee97f40244daac68c6886fe", "app_description": "This app will enable a embedded dashboards, for external use.", "summary": {"skipped": 0, "success": 99, "manual_check": 25, "failure": 0, "warning": 0, "error": 0, "not_applicable": 84}}], "request_id": null}